{"timestamp":"2025-06-29T01:42:18.623399","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-29T01:42:18.635967","level":"info","event":"Filling up the DagBag from /home/mateusz/.venv/lib/python3.11/site-packages/airflow/example_dags/standard/example_bash_operator.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-29T01:42:18.787350","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.788866","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'echo \"hello world\"; exit 99;']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.831555","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.832596","level":"info","event":"hello world","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.833124","level":"info","event":"Command exited with return code 99","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.835098","level":"info","event":"Skipping task.","reason":"Bash command returned exit code 99. Skipping.","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.090734Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.091269Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.091583Z","level":"info","event":"Current task name:this_will_skip","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.091879Z","level":"info","event":"Dag name:example_bash_operator","chan":"stdout","logger":"task"}
