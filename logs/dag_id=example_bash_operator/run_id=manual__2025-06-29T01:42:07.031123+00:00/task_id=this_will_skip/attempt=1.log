{"timestamp":"2025-06-29T01:42:18.872604","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-29T01:42:18.874557","level":"info","event":"Filling up the DagBag from /home/mateusz/.venv/lib/python3.11/site-packages/airflow/example_dags/standard/example_bash_operator.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-29T01:42:18.946094","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.948286","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'echo \"hello world\"; exit 99;']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.991467","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.992016","level":"info","event":"hello world","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.992486","level":"info","event":"Command exited with return code 99","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-06-29T01:42:18.993801","level":"info","event":"Skipping task.","reason":"Bash command returned exit code 99. Skipping.","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.221293Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.221730Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.222104Z","level":"info","event":"Current task name:this_will_skip","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-29T01:42:19.222436Z","level":"info","event":"Dag name:example_bash_operator","chan":"stdout","logger":"task"}
